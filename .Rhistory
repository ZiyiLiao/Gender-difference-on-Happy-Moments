library(tidytext)
library(tm)
library(plyr)
library(dplyr)
library(ggplot2)
library(tidyr)
library(readr)
library(stringr)
library(scales)
#Merge the text data with demographic data into a CSV file
#write_csv(happydb, "../data/output/happydb.csv")
happydb = read.csv("../data/output/happydb.csv")
female <- happydb %>%
filter(gender == 'f')
male <- happydb %>%
filter(gender == 'm')
urlfile<-'https://raw.githubusercontent.com/rit-public/HappyDB/master/happydb/data/senselabel.csv'
sense_data <- read.csv(urlfile)
data("stop_words")
word <- c("happy","ago","yesterday","lot","today","months","month",
"happier","happiest","last","week","past","day")
stop_words <- stop_words %>%
bind_rows(mutate(tibble(word), lexicon = "updated"))
# females' answer word cleaning
female_text <- female$text %>% as.vector()  %>%
tibble(text = .) %>%
unnest_tokens(word, text) %>%
anti_join(stop_words)
freq_f <- female_text %>% count(word, sort = TRUE) # count frequency and sort by descending order
# males' answer word cleaning
male_text <- male$text %>% as.vector()  %>%
tibble(text = .) %>%
unnest_tokens(word, text) %>%
anti_join(stop_words)
freq_m <- male_text %>% count(word, sort = TRUE) # count frequency and sort by descending order
# visualize the frequency
freq_f %>%
filter(n > 1500) %>%
mutate(word = reorder(word, n)) %>%
ggplot(aes(word, n)) +
geom_col(colour = "pink") +
xlab(NULL) +
coord_flip()
freq_m %>%
filter(n > 1500) %>%
mutate(word = reorder(word, n)) %>%
ggplot(aes(word, n)) +
geom_col(colour = "skyblue") +
xlab(NULL) +
coord_flip()
frequency <- bind_rows(mutate(freq_f, gender = "Female"),
mutate(freq_m, gender = "Male")) %>%
mutate(word = str_extract(word, "[a-z']+")) %>%
count(gender, word) %>%
group_by(gender) %>%
mutate(proportion = n / sum(n)) %>%
select(-n) %>%  # delete n var
spread(gender, proportion) %>%  # word female male as columns
gather(gender, proportion, `Male`) %>% drop_na()
ggplot(frequency, aes(x = proportion, y = `Female`, color = abs(`Female` - proportion))) +
geom_abline(color = "gray40", lty = 2) +
geom_jitter(alpha = 0.1, size = 2.5, width = 0.3, height = 0.3) +
geom_text(aes(label = word), check_overlap = TRUE, vjust = 1.5) +
scale_x_log10(labels = percent_format()) +
scale_y_log10(labels = percent_format()) +
scale_color_gradient(limits = c(0, 0.001), low = "darkslategray4", high = "gray75") +
facet_wrap(~gender, ncol = 2) +
theme(legend.position="none") +
labs(y = "Female", x = NULL)
sense_data <- read.csv(urlfile, stringsAsFactors = F)
str(sense_data)
# combine with position
pos <- sense_data %>% select(lowercaseLemma, POS) %>% as_tibble()#%>% rename(word = lowercaseLemma)
# combine with position
pos <- sense_data %>% select(word, POS) %>% as_tibble()#%>% rename(word = lowercaseLemma)
s1 <- freq_f%>% filter(n > 4000) %>% as.data.frame()
str(pos)
pos %>% inner_join(s1, by = c("word"))
# combine with position
pos <- sense_data %>% select(word, POS)#%>% rename(word = lowercaseLemma)
s1 <- freq_f%>% filter(n > 4000) %>% as.data.frame()
pos %>% inner_join(s1, by = c("word"))
str(pos)
str(s1)
pos %>% merge(s1, by = c("word"))
pos
pos1 <- sense_data %>% select(word = "time")
pos1 <- sense_data %>% filter(word = "time")
pos1 <- sense_data %>% filter(word == "time")
pos1
pos
pos1 <- pos %>% filter(word == "time")
pos
pos1 <- pos %>% filter("word" == "time")
pos
pos1 <- pos %>% filter(word %?n%"time")
pos1 <- pos %>% filter(word %n%"time")
pos1 <- pos %>% filter(word %in%"time")
pos
str(pos1)
pos1
# combine with position
pos <- sense_data %>% select(word, POS) #%>% rename(word = lowercaseLemma)
pos
pos %>% filter(word %in% c("time"))
pos %>% filter(word %in% c("a"))
pos
unique(pos)
# combine with position
pos <- sense_data %>% select(lowercaseLemma, POS) %>% rename(word = lowercaseLemma)
# combine with position
pos <- sense_data %>% select(lowercaseLemma, POS) %>% rename(word = lowercaseLemma)  %>% unique()
pos %>% merge(s1, by = c("word"))
str(freq_f)
pos_f <- freq_f %>% inner_join(pos)
pos_m  <- freq_m %>% inner_join(pos)
pos_f%>%
filter(n > 1500) %>%
mutate(word = reorder(word, n)) %>%
ggplot(aes(word, n)) +
geom_col(colour = "skyblue") +
xlab(NULL) +
coord_flip()
pos_f%>%
filter(n > 1500) %>%
mutate(pos = reorder(pos, n)) %>%
ggplot(aes(pos, n)) +
geom_col(colour = "skyblue") +
xlab(NULL) +
coord_flip()
pos_f%>%
filter(n > 1500) %>%
mutate(pos = reorder(pos, n))
pos_f %>%
filter(n > 1500)
pos_f %>% sum(n)
pos_f %>% sum(n)
pos_f %>%
group_by(pos) %>%
summarise(frequency = sum(n))
pos_f
pos_f %>%
group_by(POS) %>%
summarise(frequency = sum(n))
pos_f <- freq_f %>% inner_join(pos) %>% group_by(POS) %>% summarise(frequency = sum(n))
pos_m  <- freq_m %>% inner_join(pos)  %>% group_by(POS) %>% summarise(frequency = sum(n))
pos_f %>%
mutate(POS = reorder(POS, n)) %>%
ggplot(aes(POS, n)) +
geom_col(colour = "skyblue") +
xlab(NULL) +
coord_flip()
pos_f %>%
mutate(POS = reorder(POS, n))
pos_f
pos_f <- freq_f %>% inner_join(pos) %>% group_by(POS) %>% summarise(n = sum(n))
pos_m  <- freq_m %>% inner_join(pos)  %>% group_by(POS) %>% summarise(n= sum(n))
pos_f %>%
mutate(POS = reorder(POS, n)) %>%
ggplot(aes(POS, n)) +
geom_col(colour = "skyblue") +
xlab(NULL) +
coord_flip()
pos_f %>%
mutate(POS = reorder(POS, n)) %>%
ggplot(aes(POS, n)) +
geom_col(fill = "skyblue") +
xlab(NULL) +
coord_flip()
# visualize the frequency
freq_f %>%
filter(n > 1500) %>%
mutate(word = reorder(word, n)) %>%
ggplot(aes(word, n)) +
geom_col(fill = "pink") +
xlab(NULL) +
coord_flip()
freq_m %>%
filter(n > 1500) %>%
mutate(word = reorder(word, n)) %>%
ggplot(aes(word, n)) +
geom_col(fill= "skyblue") +
xlab(NULL) +
coord_flip()
# visualize the frequency
freq_f %>%
filter(n > 1500) %>%
mutate(word = reorder(word, n)) %>%
ggplot(aes(word, n)) +
geom_col(fill = "pink") +
xlab(NULL) +
ggtitle("Female word frequency")+
coord_flip()
freq_m %>%
filter(n > 1500) %>%
mutate(word = reorder(word, n)) %>%
ggplot(aes(word, n)) +
geom_col(fill= "skyblue") +
xlab(NULL) +
ggtitle("Male word frequency")+
coord_flip()
pos_f %>%
mutate(POS = reorder(POS, n)) %>%
ggplot(aes(POS, n)) +
geom_col(fill = "pink") +
xlab(NULL) +
ggtitle("Female Part of Speech frequncey")+
coord_flip()
pos_m %>%
mutate(POS = reorder(POS, n)) %>%
ggplot(aes(POS, n)) +
geom_col(fill = "skyblue") +
xlab(NULL) +
ggtitle("Male Part of Speech frequncey")+
coord_flip()
pos_f <- freq_f %>% inner_join(pos) %>% group_by(POS) %>% summarise(n = sum(n)) %>%mutate(proportion = n / sum(n))
pos_f
pos_m  <- freq_m %>% inner_join(pos)  %>%
group_by(POS) %>%
summarise(n= sum(n)) %>%
mutate(proportion = n /sum(n))
pos_f %>%
mutate(POS = reorder(POS, proportion)) %>%
ggplot(aes(POS, proportion)) +
geom_col(fill = "pink") +
xlab(NULL) +
ggtitle("Female Part of Speech Proportion")+
coord_flip()
pos_m %>%
mutate(POS = reorder(POS, proportion)) %>%
ggplot(aes(POS, proportion)) +
geom_col(fill = "skyblue") +
xlab(NULL) +
ggtitle("Male Part of Speech Proportion")+
coord_flip()
library(tidytext)
get_sentiments("bing")
char_v <- c("happy")
get_nrc_sentiment(char_v, cl = NULL, language = "english")
library(syuzhet)
get_nrc_sentiment(char_v, cl = NULL, language = "english")
female_text
nrc <- get_sentiments("nrc")
nrc <- get_sentiments("bing")
nrc <- get_sentiments("nrc")
install.packages("textdata")
library(textdata)
nrc <- get_sentiments("nrc")
nrc <- get_sentiments("nrc")
female_text %>%  inner_join("nrc")
str(nrc)
str(female_text)
str(nrc)
str(female_text)
female_text %>%  inner_join("nrc", by = "word")
nrc
female_text
female_text %>%  inner_join("nrc", by = "word")
female_text %>%  inner_join(nrc, by = "word")
female_text %>%  inner_join(nrc, by = "word")  %>% count(word, sort = TRUE)
female_text %>%  inner_join(nrc, by = "word")  %>% count(sentiment, sort = TRUE)
female_text %>%  inner_join(nrc, by = "word")  %>% count(word , sentiment)
female_text %>%  inner_join(nrc, by = "word")  %>% count(word , sentiment) %>% spread(sentiment, n ,fille = 0)
female_text %>%  inner_join(nrc, by = "word")  %>% count(word , sentiment) %>% spread(sentiment, n ,fill = 0)
female_text %>% get_nrc_sentiment()
female_text %>% get_nrc_sentiment(language = "english")
female_text %>% get_nrc_sentiment(.,language = "english")
female_text %>% as.vector() %>% get_nrc_sentiment(.,language = "english")
female_text$word %>% as.vector() %>% get_nrc_sentiment(.,language = "english")
female_text %>%  inner_join(nrc, by = "word")  %>% count(word , sentiment) %>% spread(sentiment, n ,fill = 0)
female_text %>%  inner_join(nrc, by = "word")  %>% count(word , sentiment) %>% spread(sentiment, n ,fill = 0) %>% mutate(sentiment = positive - negative)
female_text %>%  inner_join(nrc, by = "word")  %>% count(word , sentiment) %>% spread(sentiment, n ,fill = 0) #%>% mutate(sentiment = positive - negative)
female_text %>%  inner_join(nrc, by = "word")  %>% count(word , sentiment) %>% spread(sentiment, n ,fill = 0) %>% mutate(sentiment = positive - negative)
nrc = get_sentiments("nrc")
female_sentiment <- female_text %>%  inner_join(nrc, by = "word")  %>% count(word , sentiment) %>% spread(sentiment, n ,fill = 0) %>% mutate(sentiment = positive - negative)
male_sentiment <- male_text %>%  inner_join(nrc, by = "word")  %>% count(word , sentiment) %>% spread(sentiment, n ,fill = 0) %>% mutate(sentiment = positive - negative)
ggplot(female_sentiment, aes(index, sentiment, fill = word)) +
geom_col(show.legend = FALSE) +
facet_wrap(~word, ncol = 2, scales = "free_x")
# add a new column counting the difference between positive word count with negative word count
female_sentiment <- female_text %>%  inner_join(nrc, by = "word")  %>% count(word ,index = linenumber %/% 80, sentiment) %>% spread(sentiment, n ,fill = 0) %>% mutate(sentiment = positive - negative)
install.packages("janeaustenr")
install.packages("janeaustenr")
library(janeaustenr)
tidy_books <- austen_books() %>%
group_by(book) %>%
mutate(linenumber = row_number(),
chapter = cumsum(str_detect(text, regex("^chapter [\\divxlc]",
ignore_case = TRUE)))) %>%
ungroup() %>%
unnest_tokens(word, text)
library(dplyr)
library(tidytext)
library(tm)
library(plyr)
library(dplyr)
library(ggplot2)
library(tidyr)
library(readr)
library(stringr)
library(scales)
library(tidytext)
library(textdata)
tidy_books <- austen_books() %>%
group_by(book) %>%
mutate(linenumber = row_number(),
chapter = cumsum(str_detect(text, regex("^chapter [\\divxlc]",
ignore_case = TRUE)))) %>%
ungroup() %>%
unnest_tokens(word, text)
library(stringr)
tidy_books <- austen_books() %>%
group_by(book) %>%
mutate(linenumber = row_number(),
chapter = cumsum(str_detect(text, regex("^chapter [\\divxlc]",
ignore_case = TRUE)))) %>%
ungroup() %>%
unnest_tokens(word, text)
library(janeaustenr)
tidy_books <- austen_books() %>%
group_by(book) %>%
mutate(linenumber = row_number(),
chapter = cumsum(str_detect(text, regex("^chapter [\\divxlc]",
ignore_case = TRUE)))) %>%
ungroup() %>%
unnest_tokens(word, text)
library(dplyr)
tidy_books <- austen_books() %>%
group_by(book) %>%
mutate(linenumber = row_number(),
chapter = cumsum(str_detect(text, regex("^chapter [\\divxlc]",
ignore_case = TRUE)))) %>%
ungroup() %>%
unnest_tokens(word, text)
austen_books()
austen_books() %>%
group_by(book) #%>%
# add a new column counting the difference between positive word count with negative word count
female_sentiment <- female_text %>%  inner_join(nrc, by = "word")  %>% count(word ,index = n %/% 80, sentiment) %>% spread(sentiment, n ,fill = 0) %>% mutate(sentiment = positive - negative)
# add a new column counting the difference between positive word count with negative word count
female_sentiment <- female_text %>%  inner_join(nrc, by = "word")  %>% count(word,  sentiment) %>% spread(sentiment, n ,fill = 0) %>% mutate(sentiment = positive - negative)
# add a new column counting the difference between positive word count with negative word count
female_sentiment <- female_text %>%  inner_join(nrc, by = "word")  %>% count(word,sentiment) %>% spread(sentiment, n ,fill = 0) %>% mutate(sentiment = positive - negative)
# obtained sentiment
nrc = get_sentiments("nrc")
# add a new column counting the difference between positive word count with negative word count
female_sentiment <- female_text %>%  inner_join(nrc, by = "word")  %>% count(word,sentiment) %>% spread(sentiment, n ,fill = 0) %>% mutate(sentiment = positive - negative)
male_sentiment <- male_text %>%  inner_join(nrc, by = "word")  %>% count(word , sentiment) %>% spread(sentiment, n ,fill = 0) %>% mutate(sentiment = positive - negative)
# obtained sentiment
nrc = get_sentiments("nrc")
nrc
# add a new column counting the difference between positive word count with negative word count
female_sentiment <- female_text %>%  inner_join(nrc, by = "word")  #%>% count(word,sentiment) %>% spread(sentiment, n ,fill = 0) %>% mutate(sentiment = positive - negative)
# add a new column counting the difference between positive word count with negative word count
female_sentiment <- female_text %>%  inner_join(nrc, by = "word")  %>% count(word,sentiment) #%>% spread(sentiment, n ,fill = 0) %>% mutate(sentiment = positive - negative)
# add a new column counting the difference between positive word count with negative word count
female_sentiment <- female_text %>%  inner_join(nrc, by = "word") # %>% count(word,sentiment) #%>% spread(sentiment, n ,fill = 0) %>% mutate(sentiment = positive - negative)
female_text %>%  inner_join(nrc, by = "word") # %>% count(word,sentiment) #%>% spread(sentiment, n ,fill = 0) %>% mutate(sentiment = positive - negative)
female_text %>%  inner_join(nrc, by = "word")  %>% count(word,sentiment) #%>% spread(sentiment, n ,fill = 0) %>% mutate(sentiment = positive - negative)
# obtained sentiment
nrc = get_sentiments("nrc")
View(female_sentiment)
bing = get_sentiments("bing")
female_text %>%  inner_join(bing, by = "word")  %>% count(word,sentiment) #%>% spread(sentiment, n ,fill = 0) %>% mutate(sentiment = positive - negative)
female_text %>%  inner_join(bing, by = "word")  %>% count(word,sentiment)
female_text$word %>%  inner_join(bing, by = "word")  %>% count(word,sentiment) #%>% spread(sentiment, n ,fill = 0) %>% mutate(sentiment = positive - negative)
female_text %>%  inner_join(bing, by = "word")  #%>% count(word,sentiment) #%>% spread(sentiment, n ,fill = 0) %>% mutate(sentiment = positive - negative)
female_text %>%  inner_join(bing, by = "word")  %>% count(word,sentiment) %>% spread(sentiment, n ,fill = 0) %>% mutate(sentiment = positive - negative)
male_sentiment <- male_text %>%  inner_join(nrc, by = "word")  %>% count(word , sentiment) %>% spread(sentiment, n ,fill = 0) %>% mutate(sentiment = positive - negative)
# add a new column counting the difference between positive word count with negative word count
nrc$sentiment
female_text %>%  right_join(bing, by = "word")  %>% count(word,sentiment) %>% spread(sentiment, n ,fill = 0) %>% mutate(sentiment = positive - negative)
female_text %>%  inner_join(bing, by = "word")  %>% count(sentiment) #%>% spread(sentiment, n ,fill = 0) %>% mutate(sentiment = positive - negative)
female_sentiment
female_text %>%  inner_join(bing, by = "word")  %>% count(word,sentiment) #%>% spread(sentiment, n ,fill = 0) %>% mutate(sentiment = positive - negative)
female_text %>%  left_join(bing, by = "word")  %>% count(word,sentiment) #%>% spread(sentiment, n ,fill = 0) %>% mutate(sentiment = positive - negative)
library(syuzhet)
# obtained sentiment
nrc = get_sentiments("nrc")
female_text %>%  left_join(bing, by = "word")  %>% count(word,sentiment) %>% spread(sentiment, n ,fill = 0) %>% mutate(sentiment = positive - negative)
male_sentiment
ggplot(female_sentiment, aes(sentiment, fill = word)) +
geom_col(show.legend = FALSE) +
facet_wrap(~word, ncol = 2, scales = "free_x")
ggplot(female_sentiment, aes(word,sentiment, fill = word)) +
geom_col(show.legend = FALSE) +
facet_wrap(~word, ncol = 2, scales = "free_x")
